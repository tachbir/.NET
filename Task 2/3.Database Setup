// UserService.cs
public class UserService {
    private readonly Dictionary<string, (string PasswordHash, int FailedAttempts, bool IsLocked)> _users = new();

    public Task CreateUser(string username, string passwordHash) {
        _users[username] = (passwordHash, 0, false);
        return Task.CompletedTask;
    }

    public Task<(string PasswordHash, int FailedAttempts, bool IsLocked)?> GetUser(string username) {
        if (_users.TryGetValue(username, out var user)) {
            return Task.FromResult<(string PasswordHash, int FailedAttempts, bool IsLocked)?>(user);
        }
        return Task.FromResult<(string PasswordHash, int FailedAttempts, bool IsLocked)?>(null);
    }

    public Task UpdateFailedAttempts(string username, int attempts, bool isLocked) {
        if (_users.ContainsKey(username)) {
            var user = _users[username];
            _users[username] = (user.PasswordHash, attempts, isLocked);
        }
        return Task.CompletedTask;
    }
}

